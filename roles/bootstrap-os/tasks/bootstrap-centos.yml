---
- name: Gather host facts to get ansible_distribution_version ansible_distribution_major_version
  setup:
    gather_subset: '!all'
    filter: ansible_distribution_*version

# For Oracle Linux install public repo
- name: Download Oracle Linux public yum repo
  get_url:
    url: https://yum.oracle.com/public-yum-ol7.repo
    dest: /etc/yum.repos.d/public-yum-ol7.repo
  when:
    - use_oracle_public_repo|default(true)
    - '"Oracle" in os_release.stdout'
    - (ansible_distribution_version | float) < 7.6

- name: Enable Oracle Linux repo
  ini_file:
    dest: /etc/yum.repos.d/public-yum-ol7.repo
    section: "{{ item }}"
    option: enabled
    value: "1"
  with_items:
    - ol7_latest
    - ol7_addons
    - ol7_developer_EPEL
  when:
    - use_oracle_public_repo|default(true)
    - '"Oracle" in os_release.stdout'
    - (ansible_distribution_version | float) < 7.6

- name: Enable Oracle Linux repo
  ini_file:
    dest: "/etc/yum.repos.d/oracle-linux-ol{{ ansible_distribution_major_version }}.repo"
    section: "ol{{ ansible_distribution_major_version }}_addons"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { option: "enabled", value: "1" }
    - { option: "baseurl", value: "http://yum.oracle.com/repo/OracleLinux/OL{{ ansible_distribution_major_version }}/addons/x86_64/" }
  when:
    - '"Oracle" in os_release.stdout'
    - (ansible_distribution_version | float) >= 7.6

- name: Install EPEL for Oracle Linux repo package
  package:
    name: "oracle-epel-release-el{{ ansible_distribution_major_version }}"
    state: present
  when:
    - '"Oracle" in os_release.stdout'
    - (ansible_distribution_version | float) >= 7.6

## 1/3 Config infra mirrors
- name: Backup system mifrrors config
  shell: |
    yum clean all | true && mv /etc/yum.repos.d /etc/yum.repos.d.`date +"%Y-%m-%d-%H-%M-%S"`.bak && mkdir -p /etc/yum.repos.d
  when:
    - containeros_cluster == true

## 2/3 Config infra mirrors
- name: Config infra mirrors
  get_url:
    url: "{{ download_url }}/sources/CentOS-{{ ansible_distribution_major_version }}-All-In-One.repo"
    dest: /etc/yum.repos.d/CentOS-{{ ansible_distribution_major_version }}-All-In-One.repo
  when:
    - containeros_cluster == true

## 3/3 Config infra mirrors
- name: Modify mirrors
  shell: |
    sed -i "s#__download_url__#{{ download_url }}#g" /etc/yum.repos.d/CentOS-{{ ansible_distribution_major_version }}-All-In-One.repo && yum clean all && yum makecache
  when:
    - containeros_cluster == true

# CentOS ships with python installed

- name: Check presence of fastestmirror.conf
  stat:
    path: /etc/yum/pluginconf.d/fastestmirror.conf
  register: fastestmirror

# the fastestmirror plugin can actually slow down Ansible deployments
- name: Disable fastestmirror plugin if requested
  lineinfile:
    dest: /etc/yum/pluginconf.d/fastestmirror.conf
    regexp: "^enabled=.*"
    line: "enabled=0"
    state: present
  become: true
  when:
    - fastestmirror.stat.exists
    - not centos_fastestmirror_enabled

- name: Add proxy to /etc/yum.conf if http_proxy is defined
  ini_file:
    path: "/etc/yum.conf"
    section: main
    option: proxy
    value: "{{ http_proxy | default(omit) }}"
    state: "{{ http_proxy | default(False) | ternary('present', 'absent') }}"
    no_extra_spaces: true
  become: true

# libselinux-python is required on SELinux enabled hosts
# See https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#managed-node-requirements
- name: Install libselinux python package
  package:
    name: "{{ ( (ansible_distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}"
    state: present
  become: true

# stop and disable firewalld
- name: Check if firewalld is installd
  shell: |
    rpm -q firewalld
  register: firewalld_is_install
  ignore_errors: true

- name: Stop and disable firewalld
  systemd:
    name: firewalld
    state: stopped
    enabled: false
    masked: true
  when: firewalld_is_install.rc == 0

# 1/4 Trust registry self-signed certificate
- name: Check that the registry self-signed cerfiicate exists
  stat:
    path: "{{ registry_signed_certificate }}"
  register: stat_result
  delegate_to: localhost

- name: Set fact false, if it doesnt exist already
  set_fact:
    cargo_ca_self_sign: "{{ stat_result.stat.exists }}"

# 2/4 Trust registry self-signed certificate
- name: Enable ca configuration
  shell: update-ca-trust force-enable
  when: registry_ca_self_sign

# 3/4 Trust registry self-signed certificate
- name: Copy crt to certificate file
  copy:
    src: "{{ registry_signed_certificate }}"
    dest: "/etc/pki/ca-trust/source/anchors/registry-ca.crt"
  when: registry_ca_self_sign

# 4/4 Trust registry self-signed certificate
- name: Update certificate
  shell: update-ca-trust
  when: registry_ca_self_sign
