- name: Create temporary directory
  tempfile:
    state: directory
  register: resources_temp_dir

- name: generate resources.yaml
  template:
    src: "resources/{{ item }}.j2"
    dest: "{{ resources_temp_dir.path }}/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - kube-apiserver-resources.yaml
    - kube-controller-manager-resources.yaml
    - kube-scheduler-resources.yaml
    - kube-proxy-daemonset.yaml

- name: Modify static pod config
  shell:
    "{{ local_release_dir }}/yq eval-all 'select(fileIndex == 0) * select(filename == \"{{ resources_temp_dir.path }}/{{ item.resources_file }}\")' /etc/kubernetes/manifests/{{ item.static_pod_file }} {{ resources_temp_dir.path }}/{{ item.resources_file }} > {{ resources_temp_dir.path }}/{{ item.static_pod_file }}" 
  with_items:
    - static_pod_file: kube-apiserver.yaml
      resources_file: kube-apiserver-resources.yaml
    - static_pod_file: kube-controller-manager.yaml
      resources_file: kube-controller-manager-resources.yaml
    - static_pod_file: kube-scheduler.yaml
      resources_file: kube-scheduler-resources.yaml

- name: Copy component file
  shell: |
    \cp {{ resources_temp_dir.path }}/{{ item }} /etc/kubernetes/manifests/{{ item }} && \
    chown root:root /etc/kubernetes/manifests/{{ item }} && \
    chmod 600 /etc/kubernetes/manifests/{{ item }}
  with_items:
    - kube-apiserver.yaml
    - kube-controller-manager.yaml
    - kube-scheduler.yaml
  notify:
    - "Master | Restart kube-controller-manager"
    - "Master | Restart kube-scheduler"
    - "Master | Restart apiserver"

- name: Config kube-proxy daemonset config
  shell: |
    {{ bin_dir }}/kubectl --kubeconfig {{ kube_config_dir }}/admin.conf -n kube-system patch daemonset kube-proxy -p "$(cat {{ resources_temp_dir.path }}/kube-proxy-daemonset.yaml)"
  when:
    - inventory_hostname in groups['kube-master'][0]

- name: Cleanup temporary directory
  file:
    path: "{{ resources_temp_dir.path }}"
    state: absent
